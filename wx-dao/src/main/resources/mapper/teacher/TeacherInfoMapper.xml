<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.dao.teacher.TeacherInfoDao">
    <resultMap id="BaseResultMap" type="com.cn.beans.teacher.TeacherInfo">
        <result column="teacher_id" property="teacherId" jdbcType="INTEGER"/>
        <result column="teacher_name" property="teacherName" jdbcType="VARCHAR"/>
        <result column="teacher_type" property="teacherType" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="VARCHAR"/>
        <result column="teacher_introduction" property="teacherIntroduction" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="getTeacherInfoById" resultMap="BaseResultMap" parameterType="map">
        select teacher_name, teacher_type, teacher_introduction
        from teacher_info
        where teacher_id = #{teacherId}
          and is_enable = #{isEnable}
        limit 1;
    </select>

    <insert id="insertTeacherInfo" parameterType="com.cn.beans.teacher.TeacherInfo">
        insert into teacher_info (teacher_name, teacher_type, teacher_introduction)
        values (#{teacherName}, #{teacherType}, #{teacherIntroduction})
    </insert>
    <update id="updateTeacherInfo" parameterType="com.cn.beans.teacher.TeacherInfo">
        update teacher_info
        <set>
            <if test="teacherName != null and teacherName != ''">
                teacher_name=
                #{teacherName},
            </if>
            <if test="teacherType != null and teacherType != ''">
                teacher_type=
                #{teacherType},
            </if>
            <if test="teacherIntroduction != null and teacherIntroduction != ''">
                teacher_introduction=
                #{teacherIntroduction},
            </if>
        </set>
        where teacher_id=#{teacherId} and is_enable=#{isEnable} limit 1
    </update>
    <update id="deleteTeacherInfo" parameterType="map">
        update teacher_info
        set is_enable=#{isEnable}
        where teacher_id = #{teacherId}
        limit 1
    </update>
    <select id="getTeacherInfoList" parameterType="map" resultMap="BaseResultMap">
        select teacher_id,teacher_name,teacher_introduction,teacher_type,create_time from teacher_info
        <where>
            is_enable=#{isEnable}
            <if test="teacherName != null and teacherName != ''">
                and  teacher_name like CONCAT('%',
                #{teacherName},
                '%'
                )
            </if>
        </where>
        order by create_time desc
    </select>
</mapper>
